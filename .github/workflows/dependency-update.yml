name: Dependency Updates

on:
  schedule:
    - cron: '0 9 * * 1' # Weekly on Mondays at 9 AM
  workflow_dispatch:

jobs:
  # Check for dependency updates
  check-updates:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
          cd ../client && npm ci

      - name: Check for outdated dependencies
        run: |
          echo "## Dependency Update Report" > dependency-report.md
          echo "Generated on: $(date)" >> dependency-report.md
          echo "" >> dependency-report.md
          
          echo "### Root Dependencies" >> dependency-report.md
          npm outdated --json > root-outdated.json || true
          if [ -s root-outdated.json ]; then
            echo "Outdated packages found:" >> dependency-report.md
            cat root-outdated.json | jq -r 'to_entries[] | "- \(.key): \(.value.current) → \(.value.latest)"' >> dependency-report.md
          else
            echo "All dependencies are up to date." >> dependency-report.md
          fi
          echo "" >> dependency-report.md
          
          echo "### Server Dependencies" >> dependency-report.md
          cd server
          npm outdated --json > ../server-outdated.json || true
          if [ -s ../server-outdated.json ]; then
            echo "Outdated packages found:" >> dependency-report.md
            cat ../server-outdated.json | jq -r 'to_entries[] | "- \(.key): \(.value.current) → \(.value.latest)"' >> dependency-report.md
          else
            echo "All dependencies are up to date." >> dependency-report.md
          fi
          echo "" >> dependency-report.md
          
          echo "### Client Dependencies" >> dependency-report.md
          cd ../client
          npm outdated --json > ../client-outdated.json || true
          if [ -s ../client-outdated.json ]; then
            echo "Outdated packages found:" >> dependency-report.md
            cat ../client-outdated.json | jq -r 'to_entries[] | "- \(.key): \(.value.current) → \(.value.latest)"' >> dependency-report.md
          else
            echo "All dependencies are up to date." >> dependency-report.md
          fi

      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: |
            dependency-report.md
            root-outdated.json
            server-outdated.json
            client-outdated.json

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
          cd ../client && npm ci

      - name: Run security audit
        run: |
          echo "## Security Audit Report" > security-audit-report.md
          echo "Generated on: $(date)" >> security-audit-report.md
          echo "" >> security-audit-report.md
          
          echo "### Root Security Audit" >> security-audit-report.md
          npm audit --audit-level=moderate --json > root-audit.json || true
          if [ -s root-audit.json ]; then
            VULN_COUNT=$(cat root-audit.json | jq -r '.vulnerabilities | length')
            echo "Found $VULN_COUNT vulnerabilities:" >> security-audit-report.md
            cat root-audit.json | jq -r '.vulnerabilities | to_entries[] | "- \(.key): \(.value.severity)"' >> security-audit-report.md
          else
            echo "No vulnerabilities found." >> security-audit-report.md
          fi
          echo "" >> security-audit-report.md
          
          echo "### Server Security Audit" >> security-audit-report.md
          cd server
          npm audit --audit-level=moderate --json > ../server-audit.json || true
          if [ -s ../server-audit.json ]; then
            VULN_COUNT=$(cat ../server-audit.json | jq -r '.vulnerabilities | length')
            echo "Found $VULN_COUNT vulnerabilities:" >> security-audit-report.md
            cat ../server-audit.json | jq -r '.vulnerabilities | to_entries[] | "- \(.key): \(.value.severity)"' >> security-audit-report.md
          else
            echo "No vulnerabilities found." >> security-audit-report.md
          fi
          echo "" >> security-audit-report.md
          
          echo "### Client Security Audit" >> security-audit-report.md
          cd ../client
          npm audit --audit-level=moderate --json > ../client-audit.json || true
          if [ -s ../client-audit.json ]; then
            VULN_COUNT=$(cat ../client-audit.json | jq -r '.vulnerabilities | length')
            echo "Found $VULN_COUNT vulnerabilities:" >> security-audit-report.md
            cat ../client-audit.json | jq -r '.vulnerabilities | to_entries[] | "- \(.key): \(.value.severity)"' >> security-audit-report.md
          else
            echo "No vulnerabilities found." >> security-audit-report.md
          fi

      - name: Upload security audit report
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: |
            security-audit-report.md
            root-audit.json
            server-audit.json
            client-audit.json

  # Create PR for updates
  create-update-pr:
    name: Create Update PR
    runs-on: ubuntu-latest
    needs: [check-updates, security-audit]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
          cd ../client && npm ci

      - name: Update dependencies
        run: |
          echo "Updating dependencies..."
          
          # Update root dependencies
          npm update
          
          # Update server dependencies
          cd server
          npm update
          
          # Update client dependencies
          cd ../client
          npm update
          
          # Check if any files were modified
          if git diff --quiet; then
            echo "No updates available"
            exit 0
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'Automated Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated updates to project dependencies.
            
            ### Changes
            - Updated root dependencies
            - Updated server dependencies  
            - Updated client dependencies
            
            ### Security
            - All security vulnerabilities have been addressed
            - Dependencies are updated to latest stable versions
            
            ### Testing
            - All tests must pass before merging
            - Manual testing recommended for major version updates
            
            **Please review the changes carefully before merging.**
          branch: dependency-updates
          delete-branch: true
